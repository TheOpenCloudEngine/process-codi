<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:int="http://www.springframework.org/schema/integration"

	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd">

    <!-- ============================================================= -->
    <!-- annotation scan -->
    <!-- ============================================================= -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:*.properties</value>
                <value>classpath:org/uengine/uengine.properties</value>
            </list>
        </property>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>

    <!--<context:component-scan base-package="org.uengine.codi.mw3;org.uengine.codi.scheduler"/>-->
    <context:annotation-config/>
    <aop:aspectj-autoproxy/>

	<!-- ============================================================= -->
	<!-- DataAccess -->
	<!-- ============================================================= -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">

        <!-- MySQL Data Source -->
        <property name="driverClassName" value="${codi.jdbc.driverClassName}"/>
        <property name="url"
                  value="${codi.jdbc.url}"/>
        <property name="username" value="${codi.jdbc.username}"/>
        <property name="password" value="${codi.jdbc.password}"/>
        <property name="validationQuery" value="${codi.jdbc.validationQuery}"/>
		<property name="connectionProperties" value="useUnicode=yes;characterEncoding=utf8;"/>

    </bean>


	<!-- ============================================================= -->
	<!-- Transaction -->
	<!-- ============================================================= -->
	<tx:annotation-driven transaction-manager="txManager" />

	<bean id="txManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<!-- ============================================================= -->
	<!-- uEngine SpringConnectionFactory setDataSource(DataSource) -->
	<!-- ============================================================= -->
	<bean class="org.uengine.codi.common.aoptx.ProcessManagerDirtyCheckAdvice" />


	<bean id="springConnectionFactory"
		  class="org.uengine.codi.MetaworksUEngineSpringConnectionAdapter"></bean>

	<bean id="processManagerBean" class="org.uengine.codi.CodiProcessManagerBean"
		  scope="request" primary="true">
		<property name="managedTransaction" value="true" />
		<property name="autoCloseConnection" value="false" />
		<property name="connectionFactory" ref="springConnectionFactory" />
		<aop:scoped-proxy />
	</bean>

	<bean id="springConnectionFactoryForMetaworks" class="org.metaworks.spring.SpringConnectionFactory">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="MetaworksRemoteService" class="org.uengine.codi.mw3.CodiMetaworksRemoteService"
		  scope="singleton">
		<property name="connectionFactory" ref="springConnectionFactoryForMetaworks" />
		<property name="lowerCaseSQL" value="true"/>
		<property name="debugMode" value="true"/>
	</bean>

	<bean class="org.metaworks.dao.TransactionAdvice">
		<property name="connectionFactory" ref="springConnectionFactoryForMetaworks" />
	</bean>

	<!-- ============================================================= -->
	<!-- Speciy Upload file method -->
	<!-- ============================================================= -->

    <!-- ============================================================= -->
    <!-- Process Codi Schedule Job and Task Executor -->
    <!-- ============================================================= -->
    <task:annotation-driven executor="codiExecutor" scheduler="codiScheduler"/>
    <task:executor id="codiExecutor" pool-size="1"/>
    <task:scheduler id="codiScheduler" pool-size="2"/>

	<!-- ============================================================= -->
	<!-- Queue Service -->
	<!-- ============================================================= -->

	<bean id="processManagerBeanForQueue" class="org.uengine.codi.CodiProcessManagerBean"
		  scope="prototype">
		<property name="managedTransaction" value="true" />
		<property name="autoCloseConnection" value="false" />
		<property name="connectionFactory" ref="springConnectionFactory" />
	</bean>

	<int:channel id="inputChannelForProcessExecutionThread">
		<int:queue capacity="1000"/>
	</int:channel>

	<int:channel id="outputChannelForProcessExecutionThread">
		<int:queue capacity="1000"/>
	</int:channel>

	<int:service-activator input-channel="inputChannelForProcessExecutionThread"
						   output-channel="outputChannelForProcessExecutionThread"
						   ref="processExecutor"
						   method="run"/>

	<int:poller default="true" fixed-delay="50"/>
	<bean id="processExecutor" class="org.uengine.kernel.ProcessExecutionThread" scope="prototype"/>


	<int:channel id="inputChannelForActivityCompleter">
		<int:queue capacity="1000"/>
	</int:channel>

	<int:channel id="outputChannelForActivityCompleter">
		<int:queue capacity="1000"/>
	</int:channel>

	<int:service-activator input-channel="inputChannelForActivityCompleter"
						   output-channel="outputChannelForActivityCompleter"
						   ref="activityCompleter"
						   method="run"/>


	<bean id="activityCompleter" class="org.uengine.kernel.ActivityCompleter" scope="prototype"/>



	<int:channel id="inputChannelForFaultMarker">
		<int:queue capacity="1000"/>
	</int:channel>

	<int:channel id="outputChannelForFaultMarker">
		<int:queue capacity="1000"/>
	</int:channel>

	<int:service-activator input-channel="inputChannelForFaultMarker"
						   output-channel="outputChannelForFaultMarker"
						   ref="faultMarker"
						   method="run"/>

	<bean id="faultMarker" class="org.uengine.kernel.FaultMarker" scope="prototype"/>

</beans>